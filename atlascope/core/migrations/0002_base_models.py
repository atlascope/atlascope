# Generated by Django 3.2.11 on 2022-01-27 18:37

import atlascope.core.models.dataset
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django_extensions.db.fields
import s3_file_field.fields
import uuid


class Migration(migrations.Migration):

    replaces = [('core', '0002_base_models'), ('core', '0003_dataset_importers'), ('core', '0004_new_dataset_fields'), ('core', '0005_jobs'), ('core', '0006_dataset_refactor'), ('core', '0007_remove_source_uri')]

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('core', '0001_girder'),
    ]

    operations = [
        migrations.CreateModel(
            name='Dataset',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, max_length=5000)),
                ('public', models.BooleanField(default=True)),
                ('source_uri', models.CharField(blank=True, max_length=3000, null=True)),
                ('importer', models.CharField(max_length=100, null=True, validators=[atlascope.core.models.dataset.validate_importer])),
                ('content', s3_file_field.fields.S3FileField(null=True)),
                ('dataset_type', models.CharField(choices=[('tile_source', 'tile_source'), ('tile_overlay', 'tile_overlay'), ('analytics', 'analytics')], default='tile_source', max_length=20)),
                ('derived_datasets', models.ManyToManyField(blank=True, to='core.Dataset')),
                ('metadata', models.JSONField(null=True)),
                ('extension', models.CharField(default='file', max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Pin',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('color', models.CharField(choices=[('red', 'red'), ('blue', 'blue'), ('green', 'green'), ('orange', 'orange'), ('purple', 'purple'), ('black', 'black')], default='red', max_length=15)),
                ('note', models.TextField(blank=True, max_length=1000)),
                ('dataset', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.dataset')),
            ],
        ),
        migrations.CreateModel(
            name='Investigation',
            fields=[
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, max_length=5000)),
                ('notes', models.TextField(blank=True, max_length=5000)),
                ('datasets', models.ManyToManyField(related_name='context_datasets', to='core.Dataset')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
                ('pins', models.ManyToManyField(related_name='connection_pins', to='core.Pin')),
            ],
            options={
                'get_latest_by': 'modified',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='JobRun',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('input_image', s3_file_field.fields.S3FileField(null=True)),
                ('other_inputs', models.JSONField(null=True)),
                ('outputs', models.JSONField(null=True)),
                ('last_run', models.DateTimeField(null=True)),
                ('preview_visual', s3_file_field.fields.S3FileField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='JobScript',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('script_contents', s3_file_field.fields.S3FileField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='JobRunOutputImage',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('stored_image', s3_file_field.fields.S3FileField(null=True)),
                ('job_run', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='output_images', to='core.jobrun')),
            ],
        ),
        migrations.AddField(
            model_name='jobrun',
            name='script',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.jobscript'),
        ),
        migrations.AddConstraint(
            model_name='dataset',
            constraint=models.CheckConstraint(check=models.Q(('content__isnull', False), models.Q(('source_uri__isnull', False), ('importer__isnull', False)), _connector='OR'), name='has_no_source'),
        ),
        migrations.RemoveConstraint(
            model_name='dataset',
            name='has_no_source',
        ),
        migrations.RemoveField(
            model_name='dataset',
            name='source_uri',
        ),
        migrations.AddConstraint(
            model_name='dataset',
            constraint=models.CheckConstraint(check=models.Q(('content__isnull', False), ('importer__isnull', False), _connector='OR'), name='has_no_source'),
        ),
    ]
