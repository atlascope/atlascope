name: ci
on:
  pull_request:
  push:
    branches:
      - main
    paths-ignore:
      - "web/**"
  schedule:
    - cron: "0 0 * * *"
jobs:
  test:
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        test-type: [lint, check-migrations, test]
    services:
      postgres:
        # Heroku uses PostGIS 2.5.5 and PostgreSQL 13.5
        # This is technically not a valid combination
        # according to PostGIS and is therefore not
        # not an image they offer. We use PostgreSQL 12.x
        # and PostGIS 2.5.x instead.
        image: postgis/postgis:12-2.5
        env:
          POSTGRES_DB: django
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
      rabbitmq:
        image: rabbitmq:management
        ports:
          - 5672:5672
    steps:
      - name: Install dependencies
        run: |
          # Install system libraries for Python packages:
          sudo apt-get update
          DEBIAN_FRONTEND=noninteractive sudo apt-get install --no-install-recommends --yes \
            `# C/C++ compilers and C standard library development files` \
            gcc g++ binutils libc6-dev \
            `# Python` \
            python-is-python3 python3-dev python3-pip \
            `# PostgreSQL library development files (psycopg2)` \
            libpq-dev \
            `# GDAL development files and binary (GeoDjango)` \
            libgdal-dev gdal-bin gdal-data \
            `# PROJ development files and binary (GeoDjango)` \
            libproj-dev proj-bin proj-data \
            `# GEOS library development files (GeoDjango)` \
            libgeos-dev \
            `# TIFF reading` \
            libtiff-dev
        shell: bash
      - uses: actions/checkout@v2
      - name: Install tox
        run: |
          pip install --upgrade pip
          pip install tox
      - name: Run tests
        run: |
          tox \
            -e ${{matrix.test-type}} \
            --force-dep gdal==3.0.4 \
            --force-dep pyproj~=2.0
        env:
          DJANGO_DATABASE_URL: postgres://postgres:postgres@localhost:5432/django
          DJANGO_MINIO_STORAGE_ENDPOINT: localhost:9000
          DJANGO_MINIO_STORAGE_ACCESS_KEY: minioAccessKey
          DJANGO_MINIO_STORAGE_SECRET_KEY: minioSecretKey
